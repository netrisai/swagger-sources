openapi: 3.0.0
info:
  title: Netris API
  version: v2
security:
  - cookieAuth: []
paths:
  /api/v2/vpc/:
    get:
      tags:
        - VPC
      summary: Request for getting VPC list.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPCResponseOK'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPCResponseError'
    post:
      tags:
        - VPC
      summary: Request for creating VPC.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VPCCreate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPCResponseOK'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPCResponseError'
  /api/v2/vpc/{vpcId}:
    get:
      tags:
        - VPC
      summary: Request for getting VPC object.
      parameters:
        - name: vpcId
          in: path
          required: true
          schema:
            type: integer
          description: VPC Identifier.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPCResponseObjectOK'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPCResponseObjectError'
        '404':
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/VPCResponseObjectError'
                  - type: object
                    properties:
                      message:
                        example: VPC is not found.
                      meta:
                        example:
                          apiVersion: '2'
                          statusCode: 404
    put:
      tags:
        - VPC
      summary: Request to update VPC object by id.
      parameters:
        - name: vpcId
          in: path
          required: true
          description: VPC identifier.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/VPCUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPCResponseOK'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPCResponseError'
        '404':
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/VPCResponseError'
                  - type: object
                    properties:
                      message:
                        example: VPC is not found.
                      meta:
                        example:
                          apiVersion: '2'
                          statusCode: 404
    delete:
      tags:
        - VPC
      summary: Request to delete VPC object by id.
      parameters:
        - name: vpcId
          in: path
          required: true
          description: VPC identifier.
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPCResponseOK'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPCResponseError'
        '404':
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/VPCResponseError'
                  - type: object
                    properties:
                      message:
                        example: VPC is not found.
                      meta:
                        example:
                          apiVersion: '2'
                          statusCode: 404
  /api/v2/vpc/{vpcId}/make-default:
    put:
      tags:
        - VPC
      summary: Request for set VPC as default VPC.
      parameters:
        - name: vpcId
          in: path
          required: true
          schema:
            type: integer
          description: VPC Identifier.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPCResponseMakeDefaultOK'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPCResponseError'
        '404':
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/VPCResponseError'
                  - type: object
                    properties:
                      message:
                        example: VPC is not found.
                      meta:
                        example:
                          apiVersion: '2'
                          statusCode: 404
  /api/v2/vpc/{vpcId}/resources:
    get:
      tags:
        - VPC
      summary: Request for getting resources used in VPC.
      parameters:
        - name: vpcId
          in: path
          required: true
          schema:
            type: integer
          description: VPC Identifier.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPCResponseResourceOK'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPCResponseError'
        '404':
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/VPCResponseError'
                  - type: object
                    properties:
                      message:
                        example: VPC is not found.
                      meta:
                        example:
                          apiVersion: '2'
                          statusCode: 404
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: Web Service Cookie
  schemas:
    VPCUpdate:
      allOf:
        - $ref: '#/components/schemas/VPC'
        - type: object
          properties:
            adminTenant:
              readOnly: true
    VPCCreate:
      allOf:
        - $ref: '#/components/schemas/VPC'
    VPCListing:
      allOf:
        - $ref: '#/components/schemas/VPC'
        - type: object
          properties:
            isSystem:
              description: System-generated VPC that isn't allowed to be deleted.
              example: true
              type: boolean
            isDefault:
              type: boolean
              default: false
              example: false
              description: |
                Default VPC. There must be exactly one VPC designated as the default VPC.
            vni:
              description: The system reserves VXLAN ID upon creating a VPC object.
              type: integer
              example: 2131
    VPCResource:
      type: object
      properties:
        id:
          type: integer
          description: VPC Identifier.
          example: 2
        resources:
          type: array
          items:
            type: object
            properties:
              site:
                type: object
                properties:
                  id:
                    type: integer
                    description: Site object identifier.
                    example: 1
                  name:
                    type: string
                    description: Site object name.
                    example: MySite
              bgp:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: BGP object identifier.
                      example: 13
                    name:
                      type: string
                      description: BGP object name.
                      example: bgp1
              roh:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: ROH object identifier.
                      example: 91
                    name:
                      type: string
                      description: ROH object name.
                      example: roh1
              vnet:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: V-Net object identifier.
                      example: 16
                    name:
                      type: string
                      description: V-Net object name.
                      example: vnet1
              ipam:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Subnet object identifier.
                      example: 41
                    name:
                      type: string
                      description: Subnet object name.
                      example: 10.10.10.0/24
              route:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Static route object identifier.
                      example: 1
                    name:
                      type: string
                      description: Static route object name.
                      example: 21
    VPC:
      type: object
      required:
        - adminTenant
      properties:
        name:
          type: string
          example: MyVPC
          description: Name of VPC object
        adminTenant:
          description: |
            Users who have been designated as the tenant owner are authorized to manage the parameters of the VPC.
          type: object
          required:
            - id
          properties:
            id:
              type: integer
              example: 1
              description: Tenant identifier.
            name:
              type: string
              example: Admin
              description: Tenant name.
        guestTenant:
          description: |
            This is a list of tenants who are authorized to add or remove services to the VPC, but are not permitted to manage any other parameters of the VPC.
          type: array
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: integer
                example: 2
                description: Tenant identifier.
              name:
                type: string
                example: Unix
                description: Tenant name.
        tags:
          example:
            - tag1
            - tag2
          description: Tags are universal labels that you assign to a resource.
          type: array
          items:
            type: string
        createdDate:
          example: 1688375758000
          description: The timestamp when the VPC has been created.
          type: integer
        modifiedDate:
          example: 1688375758000
          description: The timestamp when the VPC has been modified.
          type: integer
    VPCResponseOK:
      type: object
      description: Success response
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/VPCListing'
        errors:
          type: object
          example:
            propertyName: Error message
          properties:
            key:
              type: string
        message:
          type: string
          example: ''
        isSuccess:
          type: boolean
        meta:
          type: object
          properties:
            apiVersion:
              type: string
              example: 2
            statusCode:
              type: integer
              example: 200
    VPCResponseObjectOK:
      type: object
      description: Success response
      properties:
        data:
            $ref: '#/components/schemas/VPCListing'
        errors:
          type: object
          example:
            propertyName: Error message
          properties:
            key:
              type: string
        message:
          type: string
          example: ''
        isSuccess:
          type: boolean
        meta:
          type: object
          properties:
            apiVersion:
              type: string
              example: 2
            statusCode:
              type: integer
              example: 200
    VPCResponseCreateOK:
      type: object
      description: Success response
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/VPCCreate'
        errors:
          type: object
          example:
            propertyName: Error message
          properties:
            key:
              type: string
        message:
          type: string
          example: ''
        isSuccess:
          type: boolean
        meta:
          type: object
          properties:
            apiVersion:
              type: string
              example: 2
            statusCode:
              type: integer
              example: 200
    VPCResponseResourceOK:
      type: object
      description: Success response
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/VPCResource'
        errors:
          type: object
          example:
            propertyName: Error message
          properties:
            key:
              type: string
        message:
          type: string
          example: ''
        isSuccess:
          type: boolean
        meta:
          type: object
          properties:
            apiVersion:
              type: string
              example: 2
            statusCode:
              type: integer
              example: 200
    VPCResponseObjectError:
      type: object
      description: Error response
      properties:
        data:
          type: object
        errors:
          type: object
          example:
            propertyName: Error message
          properties:
            key:
              type: string
        message:
          type: string
          example: Error message
        isSuccess:
          type: boolean
          example: false
        meta:
          type: object
          properties:
            apiVersion:
              type: string
              example: 2
            statusCode:
              type: integer
              example: 400
    VPCResponseError:
      type: object
      description: Error response
      properties:
        data:
          type: array
          items:
            type: object
        errors:
          type: object
          example:
            propertyName: Error message
          properties:
            key:
              type: string
        message:
          type: string
          example: Error message
        isSuccess:
          type: boolean
          example: false
        meta:
          type: object
          properties:
            apiVersion:
              type: string
              example: 2
            statusCode:
              type: integer
              example: 400
    VPCResponseMakeDefaultOK:
      type: object
      description: Success response
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
                description: VPC Indentifier.
        errors:
          type: object
          example:
            propertyName: Error message
          properties:
            key:
              type: string
        message:
          type: string
          example: ''
        isSuccess:
          type: boolean
        meta:
          type: object
          properties:
            apiVersion:
              type: string
              example: 2
            statusCode:
              type: integer
              example: 200
